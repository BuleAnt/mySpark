埋点的宏观目标是为了获取数据指标来整体上验证产品的业务逻辑是否顺畅，之前的一些基本假设是否成立？
这时候涉及需要验证的数据可能会涵盖：产品方向&市场运营&商业逻辑（假设有）三大方面。
通过优先级和深入度可以将指标拆解为，核心指标和相关衍生指标。

有了横纵两条逻辑线条可见的一般性具体指标如下图：
1.核心指标:
	产品规模:产品下载量,注册激活用户总量,日均活跃用户数
	市场运营:活跃用户比例,用户主要来源,留存率
	商业效果:日均流水,订单转化率,客单价
2.相关衍生指标:
	注册方向:每日下载打开App总量,每日新增注册用户,注册转化率
	留存方向:使用留存(日留存(次),周留存,月留存),购买留存(日留存,周留存,月留存)
	浏览方向:人均浏览页面量,人均浏览时长,启动次数,访问频率
	互动方向:每日评论用户数,交互反馈次数(收藏,分享,喜欢等功能)

	当然这只是草草列举一般性的指标，一般对于创业公司以及和你洽谈的机构VC，聊到核心指标一般就知道你的产品的基本情况了。
	当然对于埋点的目标不同可能还有这样的情况，如新版本上线的用户行为和功能效果数据回归验证（几种场景）：
		1.新功能是否得到用户的使用与认可？新版本增加的新功能，用户点击率怎样？
		2.用户在核心使用路径上是否顺畅？有没有因为交互体验功能按钮的设计而导致无效点击增多？
		3.市场运营效果的回归？针对某个特别的日期进行了产品内的广告Banner推广或者促销，该活动的效果如何？

app是SDK;WEB和h5是给js传参数，注意调用的js最好是单独部署，这样可以设置避免CDN缓存
解析的话就是js请求的nginx日志，解析方式可以使用hive,python,perl分析比较多。
每次发版本前都配合数据、QA一起检测下埋点是否都覆盖了。市面上也有一些自动化的，比如阿里的无痕埋点等。
解析方面则需要构建多个分布式的程序来共同完成。
	1.接收sdk或js数据的接口需要做负载均衡
	2.使用flume agent来收集点击消息
	3.建设分布式消息队列来缓存消息
	4.搭建storm实时解析平台
	5.对实时解析的结果进行自动分拣，确保nosql、sql等地方能同时收到数据
应用方面则主要是围绕营销来做
	1.提供更加精准的推送，减少短信方面的营销
	2.捕捉更加细致的用户行为，构建用户画像、提供精准的个性化推荐
	3.实时监控体系
	大致都是这几个方面吧


一款Android商业应用上线后，最关心的莫过于用户使用哪个模块比较频繁，哪个模块使用人群较少，
产品可以根据这些数据来修正app以后的发展方向，使产生最大的商业价值。
通过埋点监控，我们可以深入业务的每一个细节，
产生的用户行为可以通过所埋的点累计次数并将这些数据发送到数据中心，
通过数据分析师就能给产品提出宝贵的意见，指导产品的演化方向。

我们的埋点方案要做到以下功能：
    Android界面上的空间被用户点击，需要记录下点击控件的名称并保存此信息。
    Android界面被打开或关闭，也需要记录此信息
    最好能自动化完成，不需要修改大量代码，最好能定制
	设计思路大体如下：
		设计一个基类BaseActivity，它是继承自Activity，但是覆写了Activity的几个方法(后面会详细说明)。
		利用广播来统一管理用户行为的Log信息。
		数据积累到一定量，将用户行为数据发送到后台服务器。

