广告点击系统实时分析:
广告来自于网站或者移动App等,广告需要设定在具体的广告位,
当用户点击广告的时候,一般都会通过JavaScript,Ajax或者Socket
网后台发送点击的日志数据,在这里我们要基于SparkStreaming做实时在线统计
那么数据就需要放进消息系统中,(运行一年,解耦和,Kafka)中,
我们的SparkStreaming应用程序就会从Kafka中Pull数据过来进行计算和消费,
并把计算的数据放入到持久化系统中(Mysql)

广告点击系统实时分析的意义:因为可以在线实时的看见广告的投放效果,
就为广告的更大规模的投入和调整打下见识的基础,
从而为公司带来最大化的经济回报

核心需求:
	1.实时黑名单动态过滤出有效的用户广告点击行为;
		因为黑名单用户可能随时出现,所以需要动态更新
	2.在线计算广告点击流量
	3.Top3热门广告点击流量
	4.每个广告的流量趋势
	5.广告点击用户的区域分布分析
	6.最近一分钟的广告点击量
	7.整个广告点击SparkStreaming处理程序7*24小时的运行
数据格式:
	时间,用户,广告,地点等
技术细节:
	//动态黑名单过滤:黑名单
	在线计算用户点击的次数分析,屏蔽ip等
	使用updateStateByKey或者mapWithState进行不同地区广告点击排名的计算
	SparkStreaming+SparkSQL+SparkCore等综合分析数据
	使用Window类型的操作
	高可用和性能调优等
	流量趋势一般会结合DB等;最好的流量趋势从机器学习去用，因为不仅可以算过去，也可以预测未来。


-------------------------------------------------------------------
本讲的目标是广告点击流进来，我们对它进行统计。首先实现对数据进行统计，后续十讲我们再做其它操作。
	1：spark用scala开发，只能用Java与数据库交互，用Hbase交互的时候，Spark在线上生产环境与Hbase交互的时候，也是用java交互。等，
	应该国内大多数情况下还是使用java。
	而scala更多是为spark 内核服务，要求精通scala，估计主要不是为了开发项目，而是为了研究和改造框架的源码，
	连scala都不会，精通什么spark，无法读懂源码，出了故障，就很可能没戏了。
	中大型项目基本主要是用java开发。主要Spark是位于企业的一个大环境下的，
	scala再优秀，不可能把企业的其它项目全部改成scala。
	这个就是十年之内估计也没法达到这个目标，因为java在企业级开发的地位十年内几乎完全是不可撼动的。

默认情况下RDD中数据插入MySQL中是一条条的插入的,
也就是说去遍历每个Partition的iterator中的每一条记录,每一次都要建立一次数据库连接,
当我们使用foreachRDD的时候,操作的对象是RDD,然后我们使用RDD的foreachPartition,
此时操作的对象是Partition,而不是一条条的记录,也就是说每次读取的是整个partition
读取数据的时候效率非常高,
然后我们采用executeBatch的方式插入或者更新数据,此时也是数据库更加高效的连接/更新方式.
不过一次读取一个Partition的弊端是有可能内存OOM(Partition相对每条记录占用内存大),所以此时就需要非常关注内存的使用
























